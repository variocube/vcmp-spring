plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
    id "io.freefair.lombok" version "5.2.1"
    id 'maven-publish'
}

group 'com.variocube'
version '1.0.3'

repositories {
    mavenCentral()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencies {
    api group: 'org.springframework.boot', name: 'spring-boot-starter'
    api group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    api group: 'org.springframework.boot', name: 'spring-boot-starter-websocket'
    api group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.0.3'
    testRuntime group: 'org.springframework.boot', name: 'spring-boot-devtools'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
}

lombok.config['lombok.anyConstructor.addConstructorProperties'] = "true"

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    repositories {
        maven {
            url "s3://og-repository/maven"
            authentication {
                awsIm(AwsImAuthentication)
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

test {
    testLogging {
        showStandardStreams = true
    }
}
